{"ast":null,"code":"import jsonPlaceholder from \"../apis/jsonPlaceholder\";\nimport _ from 'lodash'; // export const fetchPosts = () => {\n//     return async function (dispatch, getState) {\n//         const response = await jsonPlaceholder.get('./posts');\n//         dispatch({ type: 'FETCH_POSTS', payload: response })\n//     }\n//     // bad approach \n//     // const response = await jsonPlaceholder.get('./posts');\n//     // return { \n//     //     type:'FETCH_POSTS'  ,\n//     //     payload:response\n//     // }\n// }\n// both same refactored above function \n\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n  // console.log('about to fetched Posts')\n  await dispatch(fetchPosts()); // console.log(getState().posts)\n  // console.log('fetched Posts')\n  // const userIds = _.uniq(_.map(getState().posts, 'userId'));\n  // refactored above statement using lodash \n\n  _.chain(getState().posts).map('userId').uniq().forEach(id => dispatch(fetchUser(id))).value();\n\n  userIds.forEach(id => dispatch(fetchUser(id))); // console.log(userIds);\n  // if had to use async and await for each user we do this  \n  // await Promise.all(userIds.map( id  => dispatch((fetchUser(id)))));\n};\nexport const fetchPosts = () => async dispatch => {\n  const response = await jsonPlaceholder.get('./posts');\n  dispatch({\n    type: 'FETCH_POSTS',\n    payload: response.data\n  });\n};\nexport const fetchUser = id => async dispatch => {\n  const response = await jsonPlaceholder.get(`/users/${id}`);\n  dispatch({\n    type: 'FETCH_USER',\n    payload: response.data\n  });\n}; // export const fetchUser = (id) =>  (dispatch) => {\n//     _fetchUser(id,dispatch);\n// }\n// const _fetchUser =  _.memoize(async (id,dispatch) => {\n//     const response = await jsonPlaceholder.get(`/users/${id}`);\n//     dispatch({type: 'FETCH_USER' , payload:response.data});\n// });\n// 19 - 14 section","map":{"version":3,"names":["jsonPlaceholder","_","fetchPostsAndUsers","dispatch","getState","fetchPosts","chain","posts","map","uniq","forEach","id","fetchUser","value","userIds","response","get","type","payload","data"],"sources":["C:/Users/Tejas/Desktop/VS CODE/REACT/LEARNING/Redux/blog/src/actions/index.js"],"sourcesContent":["import jsonPlaceholder from \"../apis/jsonPlaceholder\";\r\nimport _ from 'lodash';\r\n\r\n\r\n// export const fetchPosts = () => {\r\n//     return async function (dispatch, getState) {\r\n//         const response = await jsonPlaceholder.get('./posts');\r\n\r\n//         dispatch({ type: 'FETCH_POSTS', payload: response })\r\n//     }\r\n\r\n//     // bad approach \r\n//     // const response = await jsonPlaceholder.get('./posts');\r\n\r\n//     // return { \r\n//     //     type:'FETCH_POSTS'  ,\r\n//     //     payload:response\r\n//     // }\r\n// }\r\n\r\n\r\n// both same refactored above function \r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch,getState) => {\r\n    // console.log('about to fetched Posts')\r\n\r\n    await dispatch(fetchPosts());\r\n    // console.log(getState().posts)\r\n    // console.log('fetched Posts')\r\n\r\n    // const userIds = _.uniq(_.map(getState().posts, 'userId'));\r\n     \r\n    // refactored above statement using lodash \r\n\r\n    _.chain(getState().posts)\r\n        .map('userId')\r\n            .uniq()\r\n                .forEach(id => dispatch(fetchUser(id)))\r\n                    .value()\r\n    \r\n\r\n    userIds.forEach(id => dispatch(fetchUser(id)));\r\n    // console.log(userIds);\r\n\r\n    // if had to use async and await for each user we do this  \r\n\r\n    // await Promise.all(userIds.map( id  => dispatch((fetchUser(id)))));\r\n} \r\n\r\n\r\n\r\n\r\nexport const fetchPosts = () => async (dispatch) => {\r\n    const response = await jsonPlaceholder.get('./posts');\r\n\r\n    dispatch({ type: 'FETCH_POSTS', payload: response.data })\r\n}\r\n\r\n\r\nexport const fetchUser = (id) => async (dispatch) => {\r\n    const response = await jsonPlaceholder.get(`/users/${id}`);\r\n    \r\n    dispatch({type: 'FETCH_USER' , payload:response.data});\r\n   \r\n\r\n\r\n}\r\n\r\n// export const fetchUser = (id) =>  (dispatch) => {\r\n\r\n//     _fetchUser(id,dispatch);\r\n\r\n\r\n// }\r\n\r\n\r\n// const _fetchUser =  _.memoize(async (id,dispatch) => {\r\n//     const response = await jsonPlaceholder.get(`/users/${id}`);\r\n    \r\n//     dispatch({type: 'FETCH_USER' , payload:response.data});\r\n// });\r\n\r\n// 19 - 14 section \r\n\r\n"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,yBAA5B;AACA,OAAOC,CAAP,MAAc,QAAd,C,CAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM,OAAOC,QAAP,EAAgBC,QAAhB,KAA6B;EACjE;EAEA,MAAMD,QAAQ,CAACE,UAAU,EAAX,CAAd,CAHiE,CAIjE;EACA;EAEA;EAEA;;EAEAJ,CAAC,CAACK,KAAF,CAAQF,QAAQ,GAAGG,KAAnB,EACKC,GADL,CACS,QADT,EAESC,IAFT,GAGaC,OAHb,CAGqBC,EAAE,IAAIR,QAAQ,CAACS,SAAS,CAACD,EAAD,CAAV,CAHnC,EAIiBE,KAJjB;;EAOAC,OAAO,CAACJ,OAAR,CAAgBC,EAAE,IAAIR,QAAQ,CAACS,SAAS,CAACD,EAAD,CAAV,CAA9B,EAlBiE,CAmBjE;EAEA;EAEA;AACH,CAxBM;AA6BP,OAAO,MAAMN,UAAU,GAAG,MAAM,MAAOF,QAAP,IAAoB;EAChD,MAAMY,QAAQ,GAAG,MAAMf,eAAe,CAACgB,GAAhB,CAAoB,SAApB,CAAvB;EAEAb,QAAQ,CAAC;IAAEc,IAAI,EAAE,aAAR;IAAuBC,OAAO,EAAEH,QAAQ,CAACI;EAAzC,CAAD,CAAR;AACH,CAJM;AAOP,OAAO,MAAMP,SAAS,GAAID,EAAD,IAAQ,MAAOR,QAAP,IAAoB;EACjD,MAAMY,QAAQ,GAAG,MAAMf,eAAe,CAACgB,GAAhB,CAAqB,UAASL,EAAG,EAAjC,CAAvB;EAEAR,QAAQ,CAAC;IAACc,IAAI,EAAE,YAAP;IAAsBC,OAAO,EAACH,QAAQ,CAACI;EAAvC,CAAD,CAAR;AAIH,CAPM,C,CASP;AAEA;AAGA;AAGA;AACA;AAEA;AACA;AAEA"},"metadata":{},"sourceType":"module"}