{"ast":null,"code":"import jsonPlaceholder from \"../apis/jsonPlaceholder\";\nimport _ from 'lodash'; // export const fetchPosts = () => {\n//     return async function (dispatch, getState) {\n//         const response = await jsonPlaceholder.get('./posts');\n//         dispatch({ type: 'FETCH_POSTS', payload: response })\n//     }\n//     // bad approach \n//     // const response = await jsonPlaceholder.get('./posts');\n//     // return { \n//     //     type:'FETCH_POSTS'  ,\n//     //     payload:response\n//     // }\n// }\n// both same refactored above function \n\nexport const fetchPosts = () => async dispatch => {\n  const response = await jsonPlaceholder.get('./posts');\n  dispatch({\n    type: 'FETCH_POSTS',\n    payload: response.data\n  });\n};\nexport const fetchUser = id => async dispatch => {\n  const response = await jsonPlaceholder.get(`/users/${id}`);\n  dispatch({\n    type: 'FETCH_USER',\n    payload: response.data\n  });\n}; // export const fetchUser = (id) =>  (dispatch) => {\n//     _fetchUser(id,dispatch);\n// }\n// const _fetchUser =  _.memoize(async (id,dispatch) => {\n//     const response = await jsonPlaceholder.get(`/users/${id}`);\n//     dispatch({type: 'FETCH_USER' , payload:response.data});\n// });\n// 19 - 14 section","map":{"version":3,"names":["jsonPlaceholder","_","fetchPosts","dispatch","response","get","type","payload","data","fetchUser","id"],"sources":["C:/Users/Tejas/Desktop/VS CODE/REACT/LEARNING/Redux/blog/src/actions/index.js"],"sourcesContent":["import jsonPlaceholder from \"../apis/jsonPlaceholder\";\r\nimport _ from 'lodash';\r\n\r\n\r\n// export const fetchPosts = () => {\r\n//     return async function (dispatch, getState) {\r\n//         const response = await jsonPlaceholder.get('./posts');\r\n\r\n//         dispatch({ type: 'FETCH_POSTS', payload: response })\r\n//     }\r\n\r\n//     // bad approach \r\n//     // const response = await jsonPlaceholder.get('./posts');\r\n\r\n//     // return { \r\n//     //     type:'FETCH_POSTS'  ,\r\n//     //     payload:response\r\n//     // }\r\n// }\r\n// both same refactored above function \r\nexport const fetchPosts = () => async (dispatch) => {\r\n    const response = await jsonPlaceholder.get('./posts');\r\n\r\n    dispatch({ type: 'FETCH_POSTS', payload: response.data })\r\n}\r\n\r\n\r\nexport const fetchUser = (id) => async (dispatch) => {\r\n    const response = await jsonPlaceholder.get(`/users/${id}`);\r\n    \r\n    dispatch({type: 'FETCH_USER' , payload:response.data});\r\n   \r\n\r\n\r\n}\r\n\r\n// export const fetchUser = (id) =>  (dispatch) => {\r\n\r\n//     _fetchUser(id,dispatch);\r\n\r\n\r\n// }\r\n\r\n\r\n// const _fetchUser =  _.memoize(async (id,dispatch) => {\r\n//     const response = await jsonPlaceholder.get(`/users/${id}`);\r\n    \r\n//     dispatch({type: 'FETCH_USER' , payload:response.data});\r\n// });\r\n\r\n// 19 - 14 section \r\n\r\n"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,yBAA5B;AACA,OAAOC,CAAP,MAAc,QAAd,C,CAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAP,IAAoB;EAChD,MAAMC,QAAQ,GAAG,MAAMJ,eAAe,CAACK,GAAhB,CAAoB,SAApB,CAAvB;EAEAF,QAAQ,CAAC;IAAEG,IAAI,EAAE,aAAR;IAAuBC,OAAO,EAAEH,QAAQ,CAACI;EAAzC,CAAD,CAAR;AACH,CAJM;AAOP,OAAO,MAAMC,SAAS,GAAIC,EAAD,IAAQ,MAAOP,QAAP,IAAoB;EACjD,MAAMC,QAAQ,GAAG,MAAMJ,eAAe,CAACK,GAAhB,CAAqB,UAASK,EAAG,EAAjC,CAAvB;EAEAP,QAAQ,CAAC;IAACG,IAAI,EAAE,YAAP;IAAsBC,OAAO,EAACH,QAAQ,CAACI;EAAvC,CAAD,CAAR;AAIH,CAPM,C,CASP;AAEA;AAGA;AAGA;AACA;AAEA;AACA;AAEA"},"metadata":{},"sourceType":"module"}